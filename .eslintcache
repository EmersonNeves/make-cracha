[{"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\index.tsx":"1","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Home\\index.tsx":"2","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\components\\header.tsx":"3","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Listagem\\index.tsx":"4","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Cadastro\\index.tsx":"5","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\services\\api.tsx":"6","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\App.tsx":"7"},{"size":440,"mtime":1607457664374,"results":"8","hashOfConfig":"9"},{"size":763,"mtime":1614802550533,"results":"10","hashOfConfig":"9"},{"size":917,"mtime":1614886726515,"results":"11","hashOfConfig":"9"},{"size":13248,"mtime":1617278051825,"results":"12","hashOfConfig":"9"},{"size":4808,"mtime":1615581231165,"results":"13","hashOfConfig":"9"},{"size":124,"mtime":1610023598369,"results":"14","hashOfConfig":"9"},{"size":512,"mtime":1617277968986,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1715zr3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\index.tsx",[],["36","37"],"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Home\\index.tsx",["38","39"],"import { Button, Image } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport HeaderComponent from '../../components/header'\r\n\r\nimport logo from '../../images/logo.png'\r\n\r\nconst Home = () => {    \r\n\r\n    return(\r\n        <React.Fragment>\r\n        <HeaderComponent/> \r\n        <div style={{display: \"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems: \"center\", paddingTop: 70}}>\r\n            <Image width={300} height={300} src={logo} />\r\n        <h1 style={{paddingTop: 25}}>Bem-vindo ao sistema</h1> \r\n        <h3 style={{textTransform:\"uppercase\", fontWeight: 600}}>Selecione uma opção no menu acima para ir para o cadastro ou listagem de funcionários.</h3>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home",["40","41"],"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\components\\header.tsx",[],"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Listagem\\index.tsx",["42","43"],"import { Alert, Button, Table, message } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HeaderComponent from \"../../components/header\";\r\nimport jsPDF from \"jspdf\";\r\nimport api from \"../../services/api\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst Listagem = () => {\r\n  let dataSource: any[] = [];\r\n\r\n  let data: Object;\r\n\r\n  interface User {\r\n    id: string;\r\n    code: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    occupation: string;\r\n    images?: Array<{\r\n      url: string;\r\n      id: number;\r\n    }>;\r\n  }\r\n\r\n  const [user, setUser] = useState<User[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get(`/users`).then((response) => {\r\n      setUser(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const [rows, setRows] = useState<any>([]);\r\n  const columns = [\r\n    {\r\n      title: \"Código\",\r\n      dataIndex: \"code\",\r\n      key: \"code\"\r\n    },\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"firstName\",\r\n      key: \"firstName\",\r\n    },\r\n    {\r\n      title: \"Sobrenome\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n    },\r\n    {\r\n      title: \"Ocupação\",\r\n      dataIndex: \"occupation\",\r\n      key: \"occupation\",\r\n    },\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"options\",\r\n      key: \"options\",\r\n      render: () => (\r\n        <a>\r\n          <EditOutlined></EditOutlined>\r\n        </a>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  user.map((user) => {\r\n    data = {\r\n      key: user.id,\r\n      code: user.code,\r\n      firstName: user.firstName.toUpperCase(),\r\n      lastName: user.lastName.toUpperCase(),\r\n      occupation: user.occupation.toUpperCase(),\r\n      images: user.images,\r\n    };\r\n\r\n    console.log(user);\r\n    console.log(\"data\", data);\r\n\r\n    dataSource.push(data);\r\n\r\n    console.log(\"dataSource\", dataSource);\r\n\r\n    return data;\r\n  });\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\r\n      console.log(\r\n        `selectedRowKeys: ${selectedRowKeys}`,\r\n        \"selectedRows: \",\r\n        selectedRows\r\n      );\r\n      setRows(selectedRows);\r\n    },\r\n  };\r\n\r\n  // console.log(rows)\r\n  // console.log(rows ? rows[0].name : 'Nenhum selecionado');\r\n\r\n  const gerarPDF = () => {\r\n    if (rows.length <= 0) {\r\n      message.error(\"Por favor, selecione ao menos um funcionário.\");\r\n    } else {\r\n      const doc = new jsPDF({ format: \"a4\", orientation: \"l\" });\r\n\r\n      //Primeiro\r\n      if (rows.length >= 1) {\r\n        doc.addImage(logo, \"PNG\", 20, 26, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(5, 9, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(5, 54, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[0].firstName.concat(\" \" + rows[0].lastName), 17, 59);\r\n        } else {\r\n          doc.text(rows[0].firstName.concat(\" \" + rows[0].lastName), 12, 59);\r\n        }\r\n        doc.text(rows[0].firstName, 32, 93, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[0].occupation, 33, 100, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[0].images[0].url,\r\n          \"JPEG\",\r\n          22,\r\n          62,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 2) {\r\n        doc.addImage(logo, \"PNG\", 78, 26, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(63, 9, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(63, 54, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[1].firstName.concat(\" \" + rows[1].lastName), 69, 59);\r\n        } else {\r\n          doc.text(rows[1].firstName.concat(\" \" + rows[1].lastName), 64, 59);\r\n        }\r\n        doc.text(rows[1].firstName, 90, 93, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[1].occupation, 90, 100, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[1].images[0].url,\r\n          \"JPEG\",\r\n          80,\r\n          62,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 3) {\r\n        doc.addImage(logo, \"JPEG\", 137, 26, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(123, 9, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(123, 54, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[2].firstName.concat(\" \" + rows[2].lastName), 135, 59);\r\n        } else {\r\n          doc.text(rows[2].firstName.concat(\" \" + rows[2].lastName), 130, 59);\r\n        doc.text(rows[2].firstName, 150, 93, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[2].occupation, 150, 100, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[2].images[0].url,\r\n          \"JPEG\",\r\n          140,\r\n          62,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 4) {\r\n        doc.addImage(logo, \"JPEG\", 194, 26, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(181, 9, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(181, 54, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[3].firstName.concat(\" \" + rows[3].lastName), 190, 59);\r\n        } else {\r\n          doc.text(rows[3].firstName.concat(\" \" + rows[3].lastName), 185, 59);\r\n        }\r\n\r\n        doc.text(rows[3].firstName, 208, 93, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[3].occupation, 208, 100, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[3].images[0].url,\r\n          \"JPEG\",\r\n          198,\r\n          62,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 5) {\r\n        doc.addImage(logo, \"JPEG\", 254, 26, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(239, 9, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(239, 54, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[4].firstName.concat(\" \" + rows[4].lastName), 250, 59);\r\n        } else {\r\n          doc.text(rows[4].firstName.concat(\" \" + rows[4].lastName), 245, 59);\r\n        }\r\n\r\n        doc.text(rows[4].firstName, 266, 93, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[4].occupation, 265, 100, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[4].images[0].url,\r\n          \"JPEG\",\r\n          257,\r\n          62,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 6) {\r\n        doc.addImage(logo, \"JPEG\", 20, 125, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(5, 108, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(5, 153, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[5].firstName.concat(\" \" + rows[5].lastName), 20, 160);\r\n        } else {\r\n          doc.text(rows[5].firstName.concat(\" \" + rows[5].lastName), 15, 160);\r\n        }\r\n\r\n        doc.text(rows[5].firstName, 32, 195, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[5].occupation, 33, 200, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[5].images[0].url,\r\n          \"JPEG\",\r\n          22,\r\n          163,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n      }\r\n      if (rows.length >= 7) {\r\n        doc.addImage(logo, \"JPEG\", 78, 125, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(63, 108, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(63, 153, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[6].firstName.concat(\" \" + rows[6].lastName), 75, 160);\r\n        } else {\r\n          doc.text(rows[6].firstName.concat(\" \" + rows[6].lastName), 70, 160);\r\n        }\r\n\r\n        doc.text(rows[6].firstName, 88, 194, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[6].occupation, 88, 199, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[6].images[0].url,\r\n          \"JPEG\",\r\n          80,\r\n          163,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n        //Fim Segundo\r\n      }\r\n      if (rows.length >= 8) {\r\n        doc.addImage(logo, \"JPEG\", 138, 125, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(123, 108, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(123, 153, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[7].firstName.concat(\" \" + rows[7].lastName), 134, 160);\r\n        } else {\r\n          doc.text(rows[7].firstName.concat(\" \" + rows[7].lastName), 129, 160);\r\n        }\r\n\r\n        doc.text(rows[7].firstName, 149, 194, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[7].occupation, 149, 200, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[7].images[0].url,\r\n          \"JPEG\",\r\n          140,\r\n          163,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n\r\n        //Fim Terceiro\r\n      }\r\n      if (rows.length >= 9) {\r\n        doc.addImage(logo, \"JPEG\", 196, 125, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(181, 108, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(181, 153, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[8].firstName.concat(\" \" + rows[8].lastName), 193, 160);\r\n        } else {\r\n          doc.text(rows[8].firstName.concat(\" \" + rows[8].lastName), 188, 160);\r\n        }\r\n\r\n        doc.text(rows[8].firstName, 208, 194, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[8].occupation, 209, 200, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[8].images[0].url,\r\n          \"JPEG\",\r\n          200,\r\n          163,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n        //Fim Quarto\r\n      }\r\n      if (rows.length >= 10) {\r\n        doc.addImage(logo, \"JPEG\", 252, 125, 25, 25, undefined, \"NONE\");\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.rect(239, 108, 55, 45);\r\n\r\n        doc.setDrawColor(0, 0, 0);\r\n        doc.setFillColor(255, 0, 0);\r\n        doc.rect(239, 153, 55, 50, \"F\");\r\n        doc.setTextColor(\"white\");\r\n        doc.setFontSize(11);\r\n        if (rows[0].firstName.concat(\" \" + rows[0].lastName).length <= 13) {\r\n          doc.text(rows[9].firstName.concat(\" \" + rows[9].lastName), 248, 160);\r\n        } else {\r\n          doc.text(rows[9].firstName.concat(\" \" + rows[9].lastName), 243, 160);\r\n        }\r\n        doc.text(rows[9].firstName, 267, 194, { align: \"center\" });\r\n        doc.setFontSize(12);\r\n        doc.text(rows[9].occupation, 265, 200, { align: \"center\" });\r\n        doc.addImage(\r\n          rows[9].images[0].url,\r\n          \"JPEG\",\r\n          258,\r\n          163,\r\n          19,\r\n          25,\r\n          undefined,\r\n          \"NONE\"\r\n        );\r\n        //Fim Quinto\r\n      }\r\n      doc.save(\"cracha\");\r\n    }\r\n  };\r\n}\r\n\r\n  return (\r\n    <>\r\n      <HeaderComponent />\r\n\r\n      <div style={{ padding: \"60px 250px 45px 250px\" }}>\r\n        <Table\r\n          id=\"myTable\"\r\n          rowSelection={{\r\n            type: \"checkbox\",\r\n            ...rowSelection,\r\n          }}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingTop: 20,\r\n          }}\r\n        >\r\n          <Button></Button>\r\n          <Button style={{ width: 250, height: 50 }} onClick={gerarPDF}>\r\n            Gerar PDF\r\n          </Button>\r\n          <Button></Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Listagem\r\n","C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\pages\\Cadastro\\index.tsx",["44"],"import { Button, Form, Input, message } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HeaderComponent from \"../../components/header\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nconst Cadastro = () => {\r\n  const history = useHistory();\r\n  const [code, setCode] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [occupation, setOccupation] = useState(\"\");\r\n  const [images, setImages] = useState<File[]>([]);\r\n\r\n  const [form] = useForm();\r\n\r\n  function handleSelectImages(event: ChangeEvent<HTMLInputElement>) {\r\n    if (!event.target.files) {\r\n      return;\r\n    }\r\n    const images = Array.from(event.target.files);\r\n\r\n    setImages(images);\r\n  }\r\n  async function handleSubmit(event: FormEvent) {\r\n    const data = new FormData();\r\n\r\n    data.append(\"code\", code);\r\n    data.append(\"firstName\", firstName.toUpperCase());\r\n    data.append(\"lastName\", lastName.toUpperCase());\r\n    data.append(\"occupation\", occupation.toUpperCase());\r\n\r\n    images.map((image) => {\r\n      data.append(\"images\", image);\r\n    });\r\n\r\n    if (firstName.length > 0 && lastName.length > 0 && occupation.length > 0) {\r\n      await api.post(\"users\", data);\r\n\r\n      message.success({content:\"Funcionário cadastrado com sucesso!\", style: {position: \"fixed\", zIndex: 9999}});\r\n      history.push(\"/\");\r\n    } else {\r\n      message.error(\"Preencha os campos abaixo antes de prosseguir.\");\r\n    }\r\n  }\r\n  console.log(images);\r\n\r\n  return (\r\n    <>\r\n      <HeaderComponent />\r\n\r\n      <div style={{ padding: \"0 250px\" }}>\r\n        <Form\r\n          onFinish={handleSubmit}\r\n          form={form}\r\n          style={{ width: \"80%\", marginLeft: \"10%\", paddingTop: 100 }}\r\n        >\r\n          <h4>Código</h4>\r\n          <Form.Item name=\"code\">\r\n            <Input value={\"\"} onChange={(event)=> setCode(event.target.value)}/>\r\n          </Form.Item>\r\n          <h4>Nome</h4>\r\n          <Form.Item  name=\"firstName\">\r\n            <Input\r\n              \r\n              value={\"\"}\r\n              onChange={(event) => setFirstName(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <h4>Sobrenome</h4>\r\n          <Form.Item name=\"lastName\">\r\n            <Input\r\n              \r\n              value={\"\"}\r\n              onChange={(event) => setLastName(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <h4>Ocupação</h4>\r\n          <Form.Item name=\"occupation\">\r\n            <Input\r\n              \r\n              value={\"\"}\r\n              onChange={(event) => setOccupation(event.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <h4>Foto</h4>\r\n          <Form.Item name=\"images\">\r\n            {images.length === 0 ? (\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                  color: \"white\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <span>Selecione uma imagem</span>\r\n                <Input\r\n                  \r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 0,\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    fontSize: 20,\r\n                    cursor: \"pointer\",\r\n                    opacity: 0,\r\n                    filter: \"alpha(opacity=0)\",\r\n                  }}\r\n                  value={\"\"}\r\n                  onChange={handleSelectImages}\r\n                  type=\"file\"\r\n                  id=\"image[]\"\r\n                />\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"green\",\r\n                  color: \"white\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <span>Imagem selecionada</span>\r\n                <Input\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 0,\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    fontSize: 20,\r\n                    cursor: \"pointer\",\r\n                    opacity: 0,\r\n                    filter: \"alpha(opacity=0)\",\r\n                  }}\r\n                  value={\"\"}\r\n                  onChange={handleSelectImages}\r\n                  type=\"file\"\r\n                  id=\"image[]\"\r\n                />\r\n              </Button>\r\n            )}\r\n          </Form.Item>\r\n          <Button style={{ width: \"50%\", marginLeft: \"25%\" }} htmlType=\"submit\">\r\n            Cadastrar\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cadastro;\r\n",["45","46"],"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\services\\api.tsx",[],"C:\\Users\\Emerson\\Projetos\\Projetos\\criador-cracha\\cracha-app\\src\\App.tsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":25},{"ruleId":"47","replacedBy":"56"},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","severity":1,"message":"58","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":15},{"ruleId":"59","severity":1,"message":"60","line":61,"column":9,"nodeType":"61","endLine":61,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":35,"column":24,"nodeType":"64","messageId":"65","endLine":35,"endColumn":26},{"ruleId":"47","replacedBy":"66"},{"ruleId":"49","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["68"],["69"],"'Alert' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["68"],["69"],"no-global-assign","no-unsafe-negation"]